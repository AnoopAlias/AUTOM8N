#Wordpress w3tc + Minify

root {{ DOCUMENTROOT }};
index index.php index.html index.htm;

##########Yoast###############
#Yoast SEO Sitemaps
location ~ ([^/]*)sitemap(.*).x(m|s)l$ {
## this redirects sitemap.xml to /sitemap_index.xml
rewrite ^/sitemap.xml$ /sitemap_index.xml permanent;
## this makes the XML sitemaps work
rewrite ^/([a-z]+)?-?sitemap.xsl$ /index.php?xsl=$1 last;
rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
## The following lines are optional for the premium extensions
## News SEO
rewrite ^/news-sitemap.xml$ /index.php?sitemap=wpseo_news last;
## Local SEO
rewrite ^/locations.kml$ /index.php?sitemap=wpseo_local_kml last;
rewrite ^/geo-sitemap.xml$ /index.php?sitemap=wpseo_local last;
## Video SEO
rewrite ^/video-sitemap.xsl$ /index.php?xsl=video last;
}
##########Yoast###############


set $cache_uri $request_uri;

# POST requests and urls with a query string should always go to PHP
if ($request_method = POST) {
set $cache_uri 'null cache';
}
if ($query_string != "") {
set $cache_uri 'null cache';
}

# Don't cache uris containing the following segments
if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
set $cache_uri 'null cache';
}

# Don't use the cache for logged in users or recent commenters
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
set $cache_uri 'null cache';
}

# BEGIN W3TC Minify cache
location ~ /wp-content/cache/minify.*\.js$ {
types {}
default_type application/x-javascript;
add_header Vary "Accept-Encoding";
}
location ~ /wp-content/cache/minify.*\.css$ {
types {}
default_type text/css;
add_header Vary "Accept-Encoding";
}
location ~ /wp-content/cache/minify.*js\.gzip$ {
gzip off;
types {}
default_type application/x-javascript;
add_header Vary "Accept-Encoding";
add_header Content-Encoding gzip;
}
location ~ /wp-content/cache/minify.*css\.gzip$ {
gzip off;
types {}
default_type text/css;
add_header Vary "Accept-Encoding";
add_header Content-Encoding gzip;
}
# END W3TC Minify cache

# BEGIN W3TC CDN
location ~ \.(ttf|ttc|otf|eot|woff|font.css)$ {
add_header Access-Control-Allow-Origin "*";
}
# END W3TC CDN

# BEGIN W3TC Minify core
rewrite ^/wp-content/cache/minify.*/w3tc_rewrite_test$ /wp-content/plugins/w3-total-cache/pub/minify.php?w3tc_rewrite_test=1 last;
set $w3tc_enc "";
if ($http_accept_encoding ~ gzip) {
set $w3tc_enc .gzip;
}
if (-f $request_filename$w3tc_enc) {
rewrite (.*) $1$w3tc_enc break;
}
rewrite ^/wp-content/cache/minify/(.+/[X]+\.css)$ /wp-content/plugins/w3-total-cache/pub/minify.php?test_file=$1 last;
rewrite ^/wp-content/cache/minify/(.+\.(css|js))$ /wp-content/plugins/w3-total-cache/pub/minify.php?file=$1 last;
# END W3TC Minify core



location / {

{% if MODSECURITY == 'enabled' %}
modsecurity_rules_file /etc/nginx/conf.d/zz_modsecurity.conf;
{% endif %}

# Include NAXSI settings
{% if NAXSI == 'enabled' %}
{% if NAXSIMODE == 'learn' %}
include /etc/nginx/conf.d/naxsi_learn.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% elif NAXSIMODE == 'active' %}
include /etc/nginx/conf.d/naxsi_active.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% endif %}
include /etc/nginx/sites-enabled/{{ CONFIGDOMAINNAME }}.naxsi.wl*;
{% endif %}
# End Include NAXSI settings

try_files /wp-content/w3tc/pgcache/$cache_uri/_index.html $uri $uri/ /index.php?q=$uri&$args;
}

location ~ ^/pingphpfpm$ {
include /etc/nginx/fastcgi_params*;
fastcgi_pass unix:{{ SOCKETFILE }};
}
location = /wp-login.php {
limit_req   zone=one  burst=1 nodelay;
include /etc/nginx/fastcgi_params*;
fastcgi_pass unix:{{ SOCKETFILE }};
}

location ~ \.php$ {

{% if MODSECURITY == 'enabled' %}
modsecurity_rules_file /etc/nginx/conf.d/zz_modsecurity.conf;
{% endif %}

# Include NAXSI settings
{% if NAXSI == 'enabled' %}
{% if NAXSIMODE == 'learn' %}
include /etc/nginx/conf.d/naxsi_learn.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% elif NAXSIMODE == 'active' %}
include /etc/nginx/conf.d/naxsi_active.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% endif %}
include /etc/nginx/sites-enabled/{{ CONFIGDOMAINNAME }}.naxsi.wl*;
{% endif %}
# End Include NAXSI settings

try_files $uri =404;
fastcgi_pass unix:{{ SOCKETFILE }};
fastcgi_index index.php;
include /etc/nginx/fastcgi_params*;

}

include /etc/nginx/conf.d/cpanel_services.conf;
