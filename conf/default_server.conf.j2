server {
        listen 127.0.0.1:80 backlog=16384 reuseport deferred;
        server_name localhost;
        access_log off;
        location / {
           proxy_pass   http://127.0.0.1:9999;
          }

          location /whm-server-status/ {
             proxy_pass   http://127.0.0.1:9999;
            }
        location /nginx_status {
            stub_status on;
            access_log off;
        }
        {% for key, value in PHPDICT.iteritems() %}
        location ~ ^/{{ key }}$ {
            include /etc/nginx/fastcgi_params*;
            fastcgi_pass unix:{{ value }}/var/run/nobody.sock;
        }
        {% endfor %}
}

{% for MYIP in CPIPLIST %}

server {
        listen {{ MYIP }}:80 default_server backlog=16384 reuseport deferred;
        server_name _;
        access_log off;
        {% if DEFAULT_VHOST_DDOS == 'enabled' %}
        include /etc/nginx/conf.d/dos_mitigate.conf;
        {% endif %}
        include /etc/nginx/conf.d/ErrorPages.conf;
        location / {
           include /etc/nginx/conf.d/default_server_include.conf*;
           proxy_pass   http://{% if PROXY_TO_MASTER %}{{ MASTER_MAINIP }}{% else %}{{ MYIP }}{% endif %}:9999;
          }
        location /glances/ {
          auth_basic "Glances";
          auth_basic_user_file /etc/nginx/conf.d/glances.password;
          port_in_redirect off;
          rewrite /glances/(.*) /$1 break;
          proxy_pass http://127.0.0.1:61208/;
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          }
          location /netdata {
            return 301 https://$host$request_uri;
          }
          location /nginx_status {
              stub_status on;
              access_log off;
              allow 127.0.0.1;
              allow ::1;
              include /etc/nginx/conf.d/nginx_status_allow*;
              deny all;
          }
          {% for key, value in PHPDICT.iteritems() %}
          location ~ ^/{{ key }}$ {
              include /etc/nginx/fastcgi_params*;
              fastcgi_pass unix:{{ value }}/var/run/nobody.sock;
          }
          {% endfor %}
}

server {
        listen {{ MYIP }}:443 default_server ssl backlog=16384 reuseport deferred;
        ssl_certificate {{ CPSRVDSSL }};
        ssl_certificate_key {{ CPSRVDSSL }};
        server_name _;
        access_log off;
        {% if DEFAULT_VHOST_DDOS == 'enabled' %}
        include /etc/nginx/conf.d/dos_mitigate.conf;
        {% endif %}
        include /etc/nginx/conf.d/ErrorPages.conf;
        location / {
           include /etc/nginx/conf.d/default_server_include.conf*;
           proxy_pass   https://{% if PROXY_TO_MASTER %}{{ MASTER_MAINIP }}{% else %}{{ MYIP }}{% endif %}:4430;
          }
          location /glances/ {
            auth_basic "Glances";
            auth_basic_user_file /etc/nginx/conf.d/glances.password;
            port_in_redirect off;
            rewrite /glances/(.*) /$1 break;
            proxy_pass http://127.0.0.1:61208/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            }
          location /nginx_status {
              stub_status on;
              access_log off;
              allow 127.0.0.1;
              allow ::1;
              include /etc/nginx/conf.d/nginx_status_allow*;
              deny all;
          }
        location /netdata {
            return 301 /netdata/;
        }
        location ~ /netdata/(?<ndpath>.*) {
          auth_basic "Netdata";
          auth_basic_user_file /etc/nginx/conf.d/netdata.password;
          proxy_pass_request_headers on;
          proxy_set_header Connection "keep-alive";
          proxy_store off;
          proxy_pass http://127.0.0.1:19999/$ndpath$is_args$args;
          gzip on;
          gzip_proxied any;
          gzip_types *;
          }
          {% for key, value in PHPDICT.iteritems() %}
          location ~ ^/{{ key }}$ {
              include /etc/nginx/fastcgi_params*;
              fastcgi_pass unix:{{ value }}/var/run/nobody.sock;
          }
          {% endfor %}
}

{% endfor %}
