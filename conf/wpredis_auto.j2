#Wordpress with redis cache + 10 Minute automatic cache purge

root {{ DOCUMENTROOT }};
index index.php index.html index.htm;

if ($http_user_agent ~ WordPress) { return 444; }

##########Yoast###############
#Yoast SEO Sitemaps
location ~ ([^/]*)sitemap(.*).x(m|s)l$ {
## this redirects sitemap.xml to /sitemap_index.xml
rewrite ^/sitemap.xml$ /sitemap_index.xml permanent;
## this makes the XML sitemaps work
rewrite ^/([a-z]+)?-?sitemap.xsl$ /index.php?xsl=$1 last;
rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
## The following lines are optional for the premium extensions
## News SEO
rewrite ^/news-sitemap.xml$ /index.php?sitemap=wpseo_news last;
## Local SEO
rewrite ^/locations.kml$ /index.php?sitemap=wpseo_local_kml last;
rewrite ^/geo-sitemap.xml$ /index.php?sitemap=wpseo_local last;
## Video SEO
rewrite ^/video-sitemap.xsl$ /index.php?xsl=video last;
}
##########Yoast###############


location / {

# Include NAXSI settings
{% if NAXSI == 'enabled' %}
{% if NAXSIMODE == 'learn' %}
include /etc/nginx/conf.d/naxsi_learn.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% elif NAXSIMODE == 'active' %}
include /etc/nginx/conf.d/naxsi_active.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% endif %}
include /etc/nginx/sites-enabled/{{ CONFIGDOMAINNAME }}.naxsi.wl*;
{% endif %}
# End Include NAXSI settings

try_files $uri $uri/ /index.php?$args;
}

location /redis-fetch {
internal  ;
sendfile off;
aio off;
set  $redis_key $args;
redis_pass  127.0.0.1:6379;
}

location /redis-store {
internal;
sendfile off;
aio off;
set_unescape_uri $key $arg_key ;
redis2_query  set $key $echo_request_body;
redis2_query expire $key 600;
redis2_pass  127.0.0.1:6379;
}

location ~ \.php$ {

# Include NAXSI settings
{% if NAXSI == 'enabled' %}
{% if NAXSIMODE == 'learn' %}
include /etc/nginx/conf.d/naxsi_learn.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% elif NAXSIMODE == 'active' %}
include /etc/nginx/conf.d/naxsi_active.rules;
{% if NAXSI_WHITELIST == 'wordpress' %}
include /etc/nginx/naxsi.d/wordpress.rules;
{% endif %}
{% if NAXSI_WHITELIST == 'drupal' %}
include /etc/nginx/naxsi.d/drupal.rules;
{% endif %}
{% endif %}
include /etc/nginx/sites-enabled/{{ CONFIGDOMAINNAME }}.naxsi.wl*;
{% endif %}
# End Include NAXSI settings

sendfile off;
aio off;

set $key "$ua_device$scheme$request_method$host$request_uri";
try_files $uri =404;

srcache_fetch_skip "$query_string$wpcookienocache$wpurinocache";
srcache_store_skip "$query_string$wpcookienocache$wpurinocache";

srcache_response_cache_control off;
srcache_request_cache_control off;

set_escape_uri $escaped_key $key;

srcache_fetch GET /redis-fetch $key;
srcache_store PUT /redis-store key=$escaped_key;

more_set_headers 'X-Cache $srcache_fetch_status';
more_set_headers 'X-Cache-2 $srcache_store_status';

include /etc/nginx/fastcgi_params*;
fastcgi_pass unix:{{ SOCKETFILE }};
}

location ~ ^/pingphpfpm$ {
include /etc/nginx/fastcgi_params*;
fastcgi_pass unix:{{ SOCKETFILE }};
}

location = /wp-login.php {
limit_req   zone=one  burst=1 nodelay;
include /etc/nginx/fastcgi_params*;

# No caching
more_clear_headers "Cache-Control";
add_header Cache-Control "private, max-age=0, no-cache, no-store";
more_clear_headers "Expires";

fastcgi_pass unix:{{ SOCKETFILE }};
}

location = /xmlrpc.php {
limit_req   zone=one  burst=1 nodelay;
include /etc/nginx/fastcgi_params*;

# No caching
more_clear_headers "Cache-Control";
add_header Cache-Control "private, max-age=0, no-cache, no-store";
more_clear_headers "Expires";

fastcgi_pass unix:{{ SOCKETFILE }};
}

include /etc/nginx/conf.d/cpanel_services.conf;
